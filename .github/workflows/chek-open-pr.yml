name: PR Notification to Discord

on:
  workflow_dispatch: # Allow manual triggering

env:
  PR_AGE_THRESHOLD_DAYS: 7

jobs:
  check-prs:
    runs-on: ubuntu-latest
    steps:
      - name: Check for open PRs
        id: check-prs
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: prs } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open'
            });
            
            if (prs.length > 0) {
              const getPRInfo = (pr) => {
                const createdDate = new Date(pr.created_at);
                const now = new Date();
                const daysOld = Math.floor((now - createdDate) / (1000 * 60 * 60 * 24));
                const ageText = daysOld === 0 ? 'created **today**' : `created **${daysOld}** days ago`;
                return {
                  daysOld,
                  formattedText: `- [${pr.title}](${pr.html_url}) by @${pr.user.login} (${ageText})`
                };
              };

              const prsWithInfo = prs.map(getPRInfo);
              const oldPRs = prsWithInfo.filter(pr => pr.daysOld > process.env.PR_AGE_THRESHOLD_DAYS);
              const recentPRs = prsWithInfo.filter(pr => pr.daysOld <= process.env.PR_AGE_THRESHOLD_DAYS);
              
              const message = {
                embeds: [{
                  title: `🔍 Open Pull Requests in ${context.repo.owner}/${context.repo.repo}`,
                  description: `Found **${prs.length}** open PR(s):\n\n${oldPRs.length > 0 ? `**PRs older than ${process.env.PR_AGE_THRESHOLD_DAYS} days** 🔴\n${oldPRs.map(pr => pr.formattedText).join('\n')}\n\n` : ''}${recentPRs.length > 0 ? `**Recent PRs**\n${recentPRs.map(pr => pr.formattedText).join('\n')}` : ''}`,
                  color: 0x3498db,
                  timestamp: new Date().toISOString()
                }]
              };
              
              await fetch('${{ secrets.DISCORD_WEBHOOK_URL }}', {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json'
                },
                body: JSON.stringify(message)
              });
            } 
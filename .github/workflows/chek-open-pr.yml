name: PR Notification to Discord

on:
  workflow_dispatch: # Allow manual triggering

env:
  PR_AGE_THRESHOLD_DAYS: 1

jobs:
  check-prs:
    runs-on: ubuntu-latest
    steps:
      - name: Check for open PRs
        id: check-prs
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // Helper function to calculate PR age and format its display text
            function getPRInfo(pr) {
              const createdDate = new Date(pr.created_at);
              return {
                daysOld: Math.floor((new Date() - createdDate) / (1000 * 60 * 60 * 24)),
                formattedText: `- [${pr.title}](${pr.html_url}) by @${pr.user.login}`
              };
            }

            // Helper function to build the message description
            function buildMessageDescription(prs, oldPRs, recentPRs) {
              const totalPRs = prs.length;
              const oldPRsSection = oldPRs.length > 0 
                ? `**PRs older than ${process.env.PR_AGE_THRESHOLD_DAYS} days** 🔴\n${oldPRs.map(pr => pr.formattedText).join('\n')}\n\n`
                : '';
              const recentPRsSection = recentPRs.length > 0
                ? `**Recent PRs**\n${recentPRs.map(pr => pr.formattedText).join('\n')}`
                : '';

              return `Found **${totalPRs}** open PR(s):\n\n${oldPRsSection}${recentPRsSection}`;
            }

            // Main execution
            const { data: prs } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open'
            });

            if (prs.length > 0) {
              // Process PRs
              const prsWithInfo = prs.map(getPRInfo);
              const oldPRs = prsWithInfo.filter(pr => pr.daysOld > process.env.PR_AGE_THRESHOLD_DAYS);
              const recentPRs = prsWithInfo.filter(pr => pr.daysOld <= process.env.PR_AGE_THRESHOLD_DAYS);

              // Build and send message
              const message = {
                embeds: [{
                  title: `🔍 Open Pull Requests in https://github.com/${context.repo.owner}/${context.repo.repo}`,
                  description: buildMessageDescription(prs, oldPRs, recentPRs),
                  color: 0x3498db,
                  timestamp: new Date().toISOString()
                }]
              };

              await fetch('${{ secrets.DISCORD_WEBHOOK_URL }}', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(message)
              });
            } 